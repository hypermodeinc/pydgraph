# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import warnings

import api_v2_pb2 as api__v2__pb2
import grpc

GRPC_GENERATED_VERSION = "1.71.0"
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(
        GRPC_VERSION, GRPC_GENERATED_VERSION
    )
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f"The grpc package installed is at version {GRPC_VERSION},"
        + f" but the generated code in api_v2_pb2_grpc.py depends on"
        + f" grpcio>={GRPC_GENERATED_VERSION}."
        + f" Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}"
        + f" or downgrade your generated code using grpcio-tools<={GRPC_VERSION}."
    )


class DgraphStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
            "/api.v2.Dgraph/Ping",
            request_serializer=api__v2__pb2.PingRequest.SerializeToString,
            response_deserializer=api__v2__pb2.PingResponse.FromString,
            _registered_method=True,
        )
        self.AllocateIDs = channel.unary_unary(
            "/api.v2.Dgraph/AllocateIDs",
            request_serializer=api__v2__pb2.AllocateIDsRequest.SerializeToString,
            response_deserializer=api__v2__pb2.AllocateIDsResponse.FromString,
            _registered_method=True,
        )
        self.SignInUser = channel.unary_unary(
            "/api.v2.Dgraph/SignInUser",
            request_serializer=api__v2__pb2.SignInUserRequest.SerializeToString,
            response_deserializer=api__v2__pb2.SignInUserResponse.FromString,
            _registered_method=True,
        )
        self.Alter = channel.unary_unary(
            "/api.v2.Dgraph/Alter",
            request_serializer=api__v2__pb2.AlterRequest.SerializeToString,
            response_deserializer=api__v2__pb2.AlterResponse.FromString,
            _registered_method=True,
        )
        self.RunDQL = channel.unary_unary(
            "/api.v2.Dgraph/RunDQL",
            request_serializer=api__v2__pb2.RunDQLRequest.SerializeToString,
            response_deserializer=api__v2__pb2.RunDQLResponse.FromString,
            _registered_method=True,
        )
        self.CreateNamespace = channel.unary_unary(
            "/api.v2.Dgraph/CreateNamespace",
            request_serializer=api__v2__pb2.CreateNamespaceRequest.SerializeToString,
            response_deserializer=api__v2__pb2.CreateNamespaceResponse.FromString,
            _registered_method=True,
        )
        self.DropNamespace = channel.unary_unary(
            "/api.v2.Dgraph/DropNamespace",
            request_serializer=api__v2__pb2.DropNamespaceRequest.SerializeToString,
            response_deserializer=api__v2__pb2.DropNamespaceResponse.FromString,
            _registered_method=True,
        )
        self.UpdateNamespace = channel.unary_unary(
            "/api.v2.Dgraph/UpdateNamespace",
            request_serializer=api__v2__pb2.UpdateNamespaceRequest.SerializeToString,
            response_deserializer=api__v2__pb2.UpdateNamespaceResponse.FromString,
            _registered_method=True,
        )
        self.ListNamespaces = channel.unary_unary(
            "/api.v2.Dgraph/ListNamespaces",
            request_serializer=api__v2__pb2.ListNamespacesRequest.SerializeToString,
            response_deserializer=api__v2__pb2.ListNamespacesResponse.FromString,
            _registered_method=True,
        )
        self.UpdateExtSnapshotStreamingState = channel.unary_unary(
            "/api.v2.Dgraph/UpdateExtSnapshotStreamingState",
            request_serializer=api__v2__pb2.UpdateExtSnapshotStreamingStateRequest.SerializeToString,
            response_deserializer=api__v2__pb2.UpdateExtSnapshotStreamingStateResponse.FromString,
            _registered_method=True,
        )
        self.StreamExtSnapshot = channel.stream_unary(
            "/api.v2.Dgraph/StreamExtSnapshot",
            request_serializer=api__v2__pb2.StreamExtSnapshotRequest.SerializeToString,
            response_deserializer=api__v2__pb2.StreamExtSnapshotResponse.FromString,
            _registered_method=True,
        )


class DgraphServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def AllocateIDs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SignInUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Alter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RunDQL(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateNamespace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DropNamespace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateNamespace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListNamespaces(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateExtSnapshotStreamingState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def StreamExtSnapshot(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_DgraphServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Ping": grpc.unary_unary_rpc_method_handler(
            servicer.Ping,
            request_deserializer=api__v2__pb2.PingRequest.FromString,
            response_serializer=api__v2__pb2.PingResponse.SerializeToString,
        ),
        "AllocateIDs": grpc.unary_unary_rpc_method_handler(
            servicer.AllocateIDs,
            request_deserializer=api__v2__pb2.AllocateIDsRequest.FromString,
            response_serializer=api__v2__pb2.AllocateIDsResponse.SerializeToString,
        ),
        "SignInUser": grpc.unary_unary_rpc_method_handler(
            servicer.SignInUser,
            request_deserializer=api__v2__pb2.SignInUserRequest.FromString,
            response_serializer=api__v2__pb2.SignInUserResponse.SerializeToString,
        ),
        "Alter": grpc.unary_unary_rpc_method_handler(
            servicer.Alter,
            request_deserializer=api__v2__pb2.AlterRequest.FromString,
            response_serializer=api__v2__pb2.AlterResponse.SerializeToString,
        ),
        "RunDQL": grpc.unary_unary_rpc_method_handler(
            servicer.RunDQL,
            request_deserializer=api__v2__pb2.RunDQLRequest.FromString,
            response_serializer=api__v2__pb2.RunDQLResponse.SerializeToString,
        ),
        "CreateNamespace": grpc.unary_unary_rpc_method_handler(
            servicer.CreateNamespace,
            request_deserializer=api__v2__pb2.CreateNamespaceRequest.FromString,
            response_serializer=api__v2__pb2.CreateNamespaceResponse.SerializeToString,
        ),
        "DropNamespace": grpc.unary_unary_rpc_method_handler(
            servicer.DropNamespace,
            request_deserializer=api__v2__pb2.DropNamespaceRequest.FromString,
            response_serializer=api__v2__pb2.DropNamespaceResponse.SerializeToString,
        ),
        "UpdateNamespace": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateNamespace,
            request_deserializer=api__v2__pb2.UpdateNamespaceRequest.FromString,
            response_serializer=api__v2__pb2.UpdateNamespaceResponse.SerializeToString,
        ),
        "ListNamespaces": grpc.unary_unary_rpc_method_handler(
            servicer.ListNamespaces,
            request_deserializer=api__v2__pb2.ListNamespacesRequest.FromString,
            response_serializer=api__v2__pb2.ListNamespacesResponse.SerializeToString,
        ),
        "UpdateExtSnapshotStreamingState": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateExtSnapshotStreamingState,
            request_deserializer=api__v2__pb2.UpdateExtSnapshotStreamingStateRequest.FromString,
            response_serializer=api__v2__pb2.UpdateExtSnapshotStreamingStateResponse.SerializeToString,
        ),
        "StreamExtSnapshot": grpc.stream_unary_rpc_method_handler(
            servicer.StreamExtSnapshot,
            request_deserializer=api__v2__pb2.StreamExtSnapshotRequest.FromString,
            response_serializer=api__v2__pb2.StreamExtSnapshotResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "api.v2.Dgraph", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers("api.v2.Dgraph", rpc_method_handlers)


# This class is part of an EXPERIMENTAL API.
class Dgraph(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Ping(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/api.v2.Dgraph/Ping",
            api__v2__pb2.PingRequest.SerializeToString,
            api__v2__pb2.PingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def AllocateIDs(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/api.v2.Dgraph/AllocateIDs",
            api__v2__pb2.AllocateIDsRequest.SerializeToString,
            api__v2__pb2.AllocateIDsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def SignInUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/api.v2.Dgraph/SignInUser",
            api__v2__pb2.SignInUserRequest.SerializeToString,
            api__v2__pb2.SignInUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def Alter(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/api.v2.Dgraph/Alter",
            api__v2__pb2.AlterRequest.SerializeToString,
            api__v2__pb2.AlterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def RunDQL(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/api.v2.Dgraph/RunDQL",
            api__v2__pb2.RunDQLRequest.SerializeToString,
            api__v2__pb2.RunDQLResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateNamespace(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/api.v2.Dgraph/CreateNamespace",
            api__v2__pb2.CreateNamespaceRequest.SerializeToString,
            api__v2__pb2.CreateNamespaceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DropNamespace(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/api.v2.Dgraph/DropNamespace",
            api__v2__pb2.DropNamespaceRequest.SerializeToString,
            api__v2__pb2.DropNamespaceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateNamespace(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/api.v2.Dgraph/UpdateNamespace",
            api__v2__pb2.UpdateNamespaceRequest.SerializeToString,
            api__v2__pb2.UpdateNamespaceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListNamespaces(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/api.v2.Dgraph/ListNamespaces",
            api__v2__pb2.ListNamespacesRequest.SerializeToString,
            api__v2__pb2.ListNamespacesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateExtSnapshotStreamingState(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/api.v2.Dgraph/UpdateExtSnapshotStreamingState",
            api__v2__pb2.UpdateExtSnapshotStreamingStateRequest.SerializeToString,
            api__v2__pb2.UpdateExtSnapshotStreamingStateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def StreamExtSnapshot(
        request_iterator,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            "/api.v2.Dgraph/StreamExtSnapshot",
            api__v2__pb2.StreamExtSnapshotRequest.SerializeToString,
            api__v2__pb2.StreamExtSnapshotResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
